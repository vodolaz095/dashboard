name: make release

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:

      redis:
        image: mirror.gcr.io/redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


      mariadb:
        image: mirror.gcr.io/mariadb:10.11.6
        env:
          MYSQL_ROOT_PASSWORD:  "dashboard"
          MYSQL_DATABASE: "dashboard"
        ports:
          - 3306:3306

      postgres:
        image: mirror.gcr.io/postgres:15-alpine
        env:
          POSTGRES_USER: "dashboard"
          POSTGRES_PASSWORD: "dashboard"
        ports:
          - "5432:5432"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'
          cache-dependency-path: go.sum

      - name: install govulncheck utility
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: scan for vulnerable packages
        run: make vuln

      - name: run unit test
        env:
          REDIS_URL: redis://127.0.0.1:6379
          PG_URL: postgres://dashboard:dashboard@localhost:5432/dashboard
          MYSQL_URL: root:dashboard@/dashboard
        run: make test

      - name: build binary for linux on AMD64
        env:
          GOOS: linux
          CGO_ENABLED: 0
          GOARCH: amd64
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard_linux_amd64 main.go

      - name: build binary for linux on ARM 6
        env:
          GOOS: linux
          CGO_ENABLED: 0
          GOARCH: arm
          GOARM: 6
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard_linux_arm6 main.go

      - name: build binary for linux on ARM 7
        env:
          GOOS: linux
          CGO_ENABLED: 0
          GOARCH: arm
          GOARM: 7
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard_linux_arm7 main.go

      - name: build binary for windows on amd64
        env:
          GOOS: windows
          CGO_ENABLED: 0
          GOARCH: amd64
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard.exe main.go

      - name: build binary for macos on amd64
        env:
          GOOS: darwin
          GOARCH: amd64
          CGO_ENABLED: 0
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard_darwin_amd64 main.go

      - name: build binary for macos on amd64
        env:
          GOOS: darwin
          GOARCH: arm
          GOARM: 7
        run: go build -ldflags "-X main.Version=${{ github.sha }}" -o build/dashboard_darwin_arm7 main.go

      - name: expose build result
        run: ls -l build/

      - name: release
        uses: nciollo/release-action@v1
        with:
          artifacts: "build/dashboard*"
